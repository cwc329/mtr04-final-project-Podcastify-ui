# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
executors:
  node-executor:
    docker:
      - image: circleci/node:12
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.5.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test_and_build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: circleci/node:12
        auth:
          username: cwc329
          password: $DOCKERHUB_PASSWORD
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      # - node/install-packages:
      #     pkg-manager: yarn
      # - run: npm run test
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: docker login
          command: |
            docker login -u cwc329 -p $DOCKERHUB_PASSWORD

      - run:
          name: docker build
          command: docker build --build-arg API_URL=$API_URL -t cwc329/podcastify-ui:latest .

      - run:
          name: docker publish
          command: docker push cwc329/podcastify-ui
  # build:

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the init job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - test_and_build:
          context: podcastify
          filters:
            branches:
              only:
                - main
                - master

      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
